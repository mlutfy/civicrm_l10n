<?php

/**
 * Implementation of hook_civicrm_config()
 */
function civicrm_l10n_civicrm_config(&$config) {
  $config =& CRM_Core_Config::singleton();
  $config->customTranslateFunction = 'civicrm_l10n_ts';
}

function civicrm_l10n_ts($text, $params = array()) {
  static $i18n = NULL;

  if (! $i18n) {
    $i18n =& CRM_Core_I18n::singleton();
  }

  // CiviCRM uses the form: "new contact: %1"
  // Drupal  uses the form: "new contact: !1" (if we don't want special formatting)
  $fixedparams = array();

  if (count($params)) {
    if (isset($params['count'])) {
      if ($params['count'] != 1) {
        $fixedparams['!count'] = $params['count'];
        $text = str_replace('%count', '!count', $params['plural']);
        unset($params['count']);
      }
    }

    foreach ($params as $key => $val) {
      $fixedparams['!' . $key] = $val;

      // replace %1 to !1 in the original string. using multiple str_replace calls
      // instead of one preg_replace for all parameter, since most strings only have
      // placeholder, so this should be more efficient in most cases.
      $text = str_replace('%' . $key, '!' . $key, $text);
    }
  }

  $text = t($text, $fixedparams);

  if (isset($params['escape'])) {
    if ($params['escape'] == 'js') {
      $text = mysql_escape_string($text);
    }
    elseif ($params['escape'] == 'js') {
      $text = addcslashes($text, "'");
    }
  }

  return $text;
}

/**
 * Implementation of hook_civicrm_buildForm()
 */
function civicrm_l10n_civicrm_buildForm($formName, &$form) {
  // CRM/Core/PseudoConstant.php country and provinces do not sort using utf-8
  // so, for example, Ã‰tats-Unis (USA) would end up at the end of the list.
  // Requires the PECL "intl" package: apt-get install php5-intl
/*
  if ($formName == 'CRM_Contribute_Form_Contribution_Main') {
    $lcMessages = CRM_Utils_System::getUFLocale();
    $bltID = $form->_bltID;

    if ($lcMessages && $lcMessages != 'en_US' && class_exists('Collator')) {
      // Country list in the billing info
      if ($form->elementExists('billing_country_id-'. $bltID)) {
        $countries = CRM_Core_PseudoConstant::country();

        $collator = new Collator($lcMessages . '.utf8');
        $collator->asort($countries);

        // could not find the correct quickform way to remove options
        $e = $form->getElement('billing_country_id-'. $bltID);
        $form->_elements[$form->_elementIndex['billing_country_id-'. $bltID]]->_options = array();
        $e->loadArray(array('' => t('- select -')));
        $e->loadArray($countries);
      }

      // Country list in the "on behalf of an organisation" profile
      if ($form->_onbehalf && $form->elementExists('onbehalf[country-3]')) {
        $countries = CRM_Core_PseudoConstant::country();

        $collator = new Collator($lcMessages . '.utf8');
        $collator->asort($countries);

        // could not find the correct quickform way to remove options
        $e = $form->getElement('onbehalf[country-3]');
        $form->_elements[$form->_elementIndex['onbehalf[country-3]']]->_options = array();
        $e->loadArray(array('' => t('- select -')));
        $e->loadArray($countries);
      }

      // TODO: state/province sort?
    }
  }
*/
}

